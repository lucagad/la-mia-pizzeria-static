@*
1. Dichiarare una variabile valorizzandola con il nostro nome.
Dichiarare un'altra variabile valorizzandola con il nostro cognome.
Stampare il nostro nome e cognome all'interno di un tag h2. (OK)
2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso)
Stampare dentro uno span il risultato (OK)
3. Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina (OK)
4. Creare una List<int> di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e mostrare in pagina solo i numeri compresi tra 20 e 70
5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) con il formato anno-mese-giorno ore:minuti:secondi (OK)
6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina (OK)
a. la data di 7 giorni fa
b. che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
*@

@{
    ViewBag.Title = "Esercizi - ";
    Layout = "_Layout";
    
    string name = "Luca";
    string surname = "Gaddini";
    
    // ESERCIZIO 2
    int n = 3;
    
    //Esercizio 3
    string text = "nel mezzo del cammin di nostra vita";
    char letter = 'a';
    
    //Esercizio 5
    int nOfNumbers = 20;
    List<int> numberList = new List<int>(nOfNumbers);
    int numberMin = 1;
    int numberMax = 90;
    int filteredMin = 20;
    int filteredMax = 70;

    for (int i = 0; i < nOfNumbers; i++)
    {
        Random rnd = new Random();
        int num = rnd.Next(numberMin,numberMax);
        numberList.Add(num);
    }

    List<int> FilteredList(List<int> numberList, int min , int max )
    {
        List<int> filteredList = new List<int>();

        foreach (var number in numberList)
        {
            if (number >= min && number <= max)
            {
                filteredList.Add(number);
            }
        }

        return filteredList;
    }

    // ESERCIZIO 2
    int SumNumber(int n)
    {
        int sum = 0;
        for (int i = 0; i <= n; i++)
        {
            sum = sum + i;
        }

        return sum;
    }
    
    //Esercizio 3
    int CountLetter(string text, char letter)
    {
        int count = text.Count(f => (f == letter));
        return count;
    }

}

<div class="container">
    
    <h2>Esercizi: </h2>
    
    <ol>
        <li>
            <h2>Ciao, @name @surname </h2>
        </li>
        
        <li>
            <span class="text-black">Somma dei numeri fino a @n è: </span>
            <span>@SumNumber(n)</span>
        </li>
        
        <li>
            <span>La lettera "@letter" è presente nalla frase "@text" @CountLetter(text, letter) volte </span>
        </li>
        
        <li>
            @foreach (int number in @FilteredList(numberList, filteredMin, filteredMax))
            {
                <span> @number </span>
            }
        </li>
        
        <li>
            <span> @DateTime.Now.ToString("yyyy/mm/dd HH:mm:ss")</span>
        </li>
        
        <li>
            <ol>
                <li>@DateTime.Now.AddDays(-7).ToString("yyyy/mm/dd HH:mm:ss")</li>
                <li>@DateTime.Now.DayOfWeek</li>
                <li>@DateTime.Now.AddYears(1).DayOfWeek</li>
            </ol>
        </li>
        

    </ol>
    
</div>
